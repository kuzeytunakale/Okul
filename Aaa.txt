import speech_recognition as sr
import pyautogui
import time
import threading 

KOMUT = "zıpla"          
TUS = 'up'              
pyautogui.PAUSE = 0.0   # Varsayılan 0.1 saniyedir. 
PHRASE_TIME_LIMIT = 1.0 # Maksimum dinlenecek ses süresi


running = True 

def press_key():
  pyautogui.press(TUS)
    

def listen_for_command(recognizer, microphone):
  global running
  while running:
    print("Konuş. ") 
    with microphone as source:
      
      # recognizer.adjust_for_ambient_noise(source, duration=0.2)
      try:
        
        audio = recognizer.listen(source, phrase_time_limit=PHRASE_TIME_LIMIT)
        print("Ses algılandı, işleniyor...")
      except sr.WaitTimeoutError:
        # print("Zaman aşımı - Konuşma algılanmadı.") 
        continue 
      except Exception as e:
        print(f"Dinleme sırasında hata: {e}")
        continue

    try:
      
      recognized_text = recognizer.recognize_google(audio, language='tr-TR')
      print(f"Algılanan: {recognized_text}")

      if KOMUT in recognized_text.lower():
        
        # threading.Thread(target=press_key).start() # Thread ile çağırma
        press_key() # Doğrudan çağırma 
    except sr.UnknownValueError:
      # print("Ne dediğin anlaşılamadı.") # Konsolu doldurmaması için yorum satırı
      pass
    except sr.RequestError as e:
      print(f"Google Servis Hatası; {e}")
      # İnternet bağlantısı yoksa veya API'ye ulaşılamıyorsa bu hata alınır.
      time.sleep(1) # Hata durumunda kısa bir bekleme
    except Exception as e:
      print(f"Tanıma sırasında beklenmedik hata: {e}")


# --- Ana Program ---
if __name__ == "__main__":
  
  r = sr.Recognizer()
  # r.energy_threshold = 4000 
  # r.dynamic_energy_threshold = True 

  mic = sr.Microphone()

  print("Ortam gürültüsü ayarlanıyor.")
    
   # Başlangıçta ortam gürültüsüne göre ayar yapalım
   r.adjust_for_ambient_noise(source, duration=1)
   print(f"Enerji Eşiği: {r.energy_threshold:.2f} (Otomatik Ayarlandı)")
    
  print(f"\n'{KOMUT}' komutunu söyleyerek dinozoru zıplatabilirsiniz.")
  
    time.sleep(2)

  # Dinleme işlemini başlat
  try:
    listen_for_command(r, mic)
  except KeyboardInterrupt:
    print("\nProgram sonlandırılıyor.")
  finally:
    running = False # Döngünün durmasını garantile
